name: Build and Release on Tag

on:
  push:
    # Run on pushes to master for CI builds, and on any tag that looks like a version
    branches: [ "master" ]
    tags:
      - 'v*.*.*'
  pull_request:
    branches: [ "master" ]

jobs:
  # The 'build' job compiles the application. It runs on every push and pull request.
  build:
    strategy:
      matrix:
        go-os: [linux, darwin]
        go-arch: [amd64, arm64]
        include:
          - go-os: linux
            os: ubuntu-latest
          - go-os: darwin
            os: macos-latest
    
    runs-on: ${{ matrix.os }}

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: '1.24.4' # Use your Go version

    - name: Build and Rename Binary
      run: |
        make build
        mv ./bin/ch ./bin/ch-${{ matrix.go-os }}-${{ matrix.go-arch }}
      env:
        GOOS: ${{ matrix.go-os }}
        GOARCH: ${{ matrix.go-arch }}

    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: binary-${{ matrix.go-os }}-${{ matrix.go-arch }}
        path: ./bin/ch-${{ matrix.go-os }}-${{ matrix.go-arch }}

  # The 'release' job creates a GitHub Release ONLY when a tag is pushed.
  release:
    runs-on: ubuntu-latest
    # This job depends on the 'build' job completing successfully.
    needs: build
    # This condition ensures the release only happens when a tag is pushed.
    if: startsWith(github.ref, 'refs/tags/')
    
    permissions:
      contents: write # This permission is required to create a release.

    steps:
      - name: Checkout code
        # We need to fetch all history and tags for the changelog generator.
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Node.js
        # The conventional-changelog-cli tool is a Node.js package.
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install Changelog Generator
        run: npm install -g conventional-changelog-cli

      - name: Generate Changelog
        # This command creates a changelog entry from all commits since the last tag.
        # The output is saved to a temporary file.
        run: |
          conventional-changelog -p angular -i CHANGELOG.md -s
          echo "CHANGELOG_BODY<<EOF" >> $GITHUB_ENV
          conventional-changelog -p angular >> $GITHUB_ENV
          echo "EOF" >> $GITHUB_ENV
        
      - name: Download all build artifacts
        uses: actions/download-artifact@v4
        with:
          path: ./release-assets

      - name: Create GitHub Release
        # This action creates the release and uploads the binaries.
        uses: softprops/action-gh-release@v2
        with:
          # The release notes are taken from the changelog file we just generated.
          body_path: CHANGELOG.md
          # The tag name is automatically taken from the Git tag that triggered the workflow.
          # The release title will also be the tag name.
          files: ./release-assets/**/*
