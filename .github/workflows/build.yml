name: Build and Release

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  # The 'build' job compiles the application for different operating systems and architectures.
  build:
    strategy:
      matrix:
        go-os: [linux, darwin]
        go-arch: [amd64, arm64]
        include:
          - go-os: linux
            os: ubuntu-latest
          - go-os: darwin
            os: macos-latest
    
    runs-on: ${{ matrix.os }}

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: '1.24.4' # Use your Go version

    - name: Build and Rename Binary
      run: |
        make build
        mv ./bin/ch ./bin/ch-${{ matrix.go-os }}-${{ matrix.go-arch }}
      env:
        GOOS: ${{ matrix.go-os }}
        GOARCH: ${{ matrix.go-arch }}

    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: binary-${{ matrix.go-os }}-${{ matrix.go-arch }}
        path: ./bin/ch-${{ matrix.go-os }}-${{ matrix.go-arch }}

  # This job now uses a two-step process for creating the release and uploading assets.
  release:
    runs-on: ubuntu-latest
    needs: build
    if: github.event_name == 'push' && github.ref == 'refs/heads/master'
    
    permissions:
      contents: write
      pull-requests: write

    steps:
      - name: Download all build artifacts
        uses: actions/download-artifact@v4
        with:
          path: ./release-assets

      - name: Run Release Please
        uses: google-github-actions/release-please-action@v4
        id: release
        with:
          release-type: go
          # This token is used to create the release PR and the final release tag.
          token: ${{ secrets.GITHUB_TOKEN }}
          
      # The following steps will only run if release-please determines a release should be made.
      - name: Upload Release Assets
        if: ${{ steps.release.outputs.release_created }}
        uses: softprops/action-gh-release@v2
        with:
          # This uses the tag and changelog body generated by release-please
          tag_name: ${{ steps.release.outputs.tag_name }}
          body: ${{ steps.release.outputs.body }}
          # This will upload all the compiled binaries from the build job.
          # The glob pattern finds the binaries inside their downloaded artifact directories.
          files: ./release-assets/**/*

